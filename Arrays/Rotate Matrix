Problem Statement
Given a 2-dimensional matrix of size ‘N’ x ‘M’, rotate the elements of the matrix clockwise.
For example: 
Input Matrix: [ [ 1, 2, 3 ] 
                [ 4, 5, 6 ] 
                [ 7, 8, 9 ] ]

Output Matrix: [ [ 4, 1, 2 ] 
                 [ 7, 5, 3 ] 
                 [ 8, 9, 6 ] ]

The output matrix is generated by rotating the elements of the input matrix in a clockwise direction. Note that every element is rotated only once. 
****************************************

#include <bits/stdc++.h> 

void rotateMatrix(vector<vector<int>> &mat, int n, int m)
{
    // Write your code here
        int iu=0,jl=0,id=n-1,jr=m-1;
        if(id==0 || jr==0){
            return;
        }
    while(iu<id && jl<jr){
        int temp=mat[iu][iu];
        for(int j=jl+1;j<=jr;j++){
            int temp1=temp;
            temp=mat[iu][j];
            mat[iu][j]=temp1;
        }
        for(int i=iu+1;i<=id;i++){
            int temp1=temp;
            temp=mat[i][jr];
            mat[i][jr]=temp1;
        }
        for(int j=jr-1;j>=jl;j--){
            int temp1=temp;
            temp=mat[id][j];
            mat[id][j]=temp1;
        }
        for(int i=id-1;i>=iu;i--){
            int temp1=temp;
            temp=mat[i][jl];
            mat[i][jl]=temp1;
        }
        iu++;
        jl++;
        id--;
        jr--;
    }
    

}
