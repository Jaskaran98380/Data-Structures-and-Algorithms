https://www.codingninjas.com/codestudio/problems/median-in-a-stream_975268?leftPanelTab=0&utm_source=youtube&utm_medium=affiliate&utm_campaign=Lovebabbar

*****************************************

#include<bits/stdc++.h>
int signum(int maxH,int minH){
    if(maxH==minH){
        return 0;
    }
    else if(maxH>minH){
        return 1;
    }
    return -1;
}

void callMedian(int ele, priority_queue<int>&maxH, priority_queue<int,vector<int>,greater<int>>&minH,int &median){
    switch(signum(maxH.size(),minH.size())){
        case 0:
            if(ele>median){
                minH.push(ele);
                median=minH.top();
            }
            else{
                maxH.push(ele);
                median=maxH.top();
            }
            break;
            
        case 1:
            if(ele>median){
                minH.push(ele);
                median=(maxH.top()+minH.top())/2;
            }
            else{
                minH.push(maxH.top());
                maxH.pop();
                maxH.push(ele);
                median=(maxH.top()+minH.top())/2;
            }
            break;
        case -1:
            if(ele>median){
                maxH.push(minH.top());
                minH.pop();
                minH.push(ele);
                median=(maxH.top()+minH.top())/2;
            }
            else{
                maxH.push(ele);
                 median=(maxH.top()+minH.top())/2;
            }
             
            
    }
}

vector<int> findMedian(vector<int> &arr, int n){
	
	// Write your code here 
    vector<int>ans;
    priority_queue<int>maxH;
    priority_queue<int,vector<int>,greater<int>>minH;
    int median=0;
    for(int i=0;i<n;i++){
        callMedian(arr[i],maxH,minH,median);
        ans.push_back(median);
    }
    return ans;
}
