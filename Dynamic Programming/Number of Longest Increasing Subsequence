https://www.codingninjas.com/codestudio/problems/number-of-longest-increasing-subsequence_3751627?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0

*****************************

#include <bits/stdc++.h> 
int findNumberOfLIS(vector<int> &arr)
{
    // Write your code here.
    int n=arr.size();
    int maxi=1;
    vector<int>dp(n,1),cnt(n,1);
    for(int i=0;i<n;i++){
        for(int j=0;j<i;j++){
            if(arr[i]>arr[j] && 1+dp[j]>dp[i]){
                dp[i]=1+dp[j];
                //inheriting
                cnt[i]=cnt[j];
            }
            else if(arr[i]>arr[j] && 1+dp[j]==dp[i]){
                //increase the count
                cnt[i]+=cnt[j];
            }
        }
        maxi=max(maxi,dp[i]);
    }
    int nos=0;
    for(int i=0;i<n;i++){
        if(dp[i]==maxi){
            nos+=cnt[i];
        }
    }
    return nos;
}
