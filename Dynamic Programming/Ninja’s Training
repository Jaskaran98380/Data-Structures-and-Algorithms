https://www.codingninjas.com/codestudio/problems/ninja-s-training_3621003?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0

***********************************
//memo

#include<bits/stdc++.h>
int func(int dayIndex,vector<vector<int>>&points,int last,vector<vector<int>>&dp)
{
    if(dayIndex==0){
        int maxi=INT_MIN;
        for(int i=0;i<3;i++){
            if(i!=last){
                maxi=max(maxi,points[0][i]);
            }
        }
        return maxi;
    }
    if(dp[dayIndex][last]!=-1)return dp[dayIndex][last];
    int maxi=INT_MIN;
    int points2;
    for(int i=0;i<3;i++){
         points2=0;
        if(i!=last){
            points2=points[dayIndex][i]+func(dayIndex-1,points,i,dp);
        }
        maxi=max(points2,maxi);
    }
    return dp[dayIndex][last]=maxi;
}


int ninjaTraining(int n, vector<vector<int>> &points)
{
    // Write your code here.
    vector<vector<int>>dp(n,vector<int>(4,-1));
    return func(n-1,points,3,dp);
}

************************************
//tab

#include<bits/stdc++.h>
int ninjaTraining(int n, vector<vector<int>> &points)
{
    // Write your code here.
    vector<vector<int>>dp(n,vector<int>(4,-1));
    for(int i=0;i<4;i++){
        int maxi=INT_MIN;
        for(int j=0;j<3;j++){
            if(j!=i)
            maxi=max(maxi,points[0][j]);
        }
        dp[0][i]=maxi;
    }
    for(int i=1;i<n;i++){
        for(int j=0;j<4;j++){
            int maxi=INT_MIN;
            for(int k=0;k<3;k++){
                if(j!=k){
                    int point=points[i][k]+dp[i-1][k];
                    dp[i][j]=max(dp[i][j],point);
                }
            }
            
        }
    }
    return dp[n-1][3];
}

************************************
space optimisation

#include<bits/stdc++.h>
int ninjaTraining(int n, vector<vector<int>> &points)
{
    // Write your code here.
    vector<int>prev(4,-1);
    for(int i=0;i<4;i++){
        int maxi=INT_MIN;
        for(int j=0;j<3;j++){
            if(j!=i)
            maxi=max(maxi,points[0][j]);
        }
        prev[i]=maxi;
    }
    for(int i=1;i<n;i++){
        vector<int>temp(4,-1);
        for(int j=0;j<4;j++){
            
            int maxi=INT_MIN;
            for(int k=0;k<3;k++){
                if(j!=k){
                    int point=points[i][k]+prev[k];
                    temp[j]=max(temp[j],point);
                }
            }
            
        }
        prev=temp;
    }
    return prev[3];
}
