https://www.codingninjas.com/codestudio/problems/partition-a-set-into-two-subsets-such-that-the-difference-of-subset-sums-is-minimum_842494?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0

*****************************
//tab

#include <bits/stdc++.h> 
int minSubsetSumDifference(vector<int>& arr, int n)
{
	// Write your code here.
    int sum=0;
    for(int i=0;i<n;i++){
        sum+=arr[i];
    }
    int k=sum/2;
     vector<vector<bool>>dp(n,vector<bool>(k+1,0));
    for(int i=0;i<n;i++){
        dp[i][0]=true;
    }
    if(arr[0]<=k){
    dp[0][arr[0]]=true;
    }
    for(int i=1;i<n;i++){
        for(int j=1;j<=k;j++){
            bool notTake=dp[i-1][j];
            bool take=false;
            if(arr[i]<=j){
                take=dp[i-1][j-arr[i]];
            }
            dp[i][j]= take || notTake;  
        }
    }
    int mini=1e9;
    for(int i=0;i<=k;i++){
        if(dp[n-1][i]==1){
            int s1=i;
            int s2=sum-i;
            mini=min(mini,abs(s1-s2));
        }
    }
    return mini;
}


*******************************
//space optimisation

#include <bits/stdc++.h> 
int minSubsetSumDifference(vector<int>& arr, int n)
{
	// Write your code here.
    int sum=0;
    for(int i=0;i<n;i++){
        sum+=arr[i];
    }
    int k=sum/2;
       vector<bool>prev(k+1,0);
    for(int i=0;i<=k;i++){
        if(i==0 || i==arr[0])prev[i]=true;
    }
    vector<bool>curr(k+1,0);
    for(int i=1;i<n;i++){
        for(int j=0;j<=k;j++){
            if(j==0)curr[j]=true;
            bool notTake = prev[j];
            bool take=false;
            if(arr[i]<=j){
                take=prev[j-arr[i]];
            }
            curr[j]= take || notTake;  
        }
        prev=curr;
    }
    int mini=1e9;
    for(int i=0;i<=k;i++){
        if(prev[i]==1){
            int s1=i;
            int s2=sum-i;
            mini=min(mini,abs(s1-s2));
        }
    }
    return mini;
}
