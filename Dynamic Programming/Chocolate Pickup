https://www.codingninjas.com/codestudio/problems/ninja-and-his-friends_3125885?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0

************************
// memo

#include <bits/stdc++.h> 

int func(int i,int j1,int j2,vector<vector<int>>&grid,int n,int m,vector<vector<vector<int>>>&dp){
    if(j1<0 || j2<0 || j1>=m || j2>=m)return -1e8;
    if(i==n-1){
        if(j1==j2)return grid[n-1][j1];
        return grid[n-1][j1]+grid[n-1][j2];
    }
    if(dp[i][j1][j2]!=-1)return dp[i][j1][j2];
    int maxi=-1e8;
    
    for(int dj1=-1;dj1<=1;dj1++){
        for(int dj2=-1;dj2<=1;dj2++){
            if(j1==j2) maxi=max(maxi,grid[i][j1]+func(i+1,j1+dj1,j2+dj2,grid,n,m,dp));
            else{
                 maxi=max(maxi,grid[i][j1]+grid[i][j2]+func(i+1,j1+dj1,j2+dj2,grid,n,m,dp));
            }
        }
    }
    return dp[i][j1][j2]=maxi;
}
int maximumChocolates(int r, int c, vector<vector<int>> &grid) {
    // Write your code here.
    vector<vector<vector<int>>>dp(r,vector<vector<int>>(c,vector<int>(c,-1)));
    return func(0,0,c-1,grid,r,c,dp);
}

//tab

#include <bits/stdc++.h> 

int maximumChocolates(int r, int c, vector<vector<int>> &grid) {
    // Write your code here.
     
    vector<vector<vector<int>>>dp(r,vector<vector<int>>(c,vector<int>(c,-1)));
    for(int i=0;i<c;i++){
        for(int j=0;j<c;j++){
            if(i==j)dp[r-1][i][i]=grid[r-1][i];
            else{
                dp[r-1][i][j]=grid[r-1][i]+grid[r-1][j];
            }
        }
    }
    
    for(int i=r-2;i>=0;i--){
        for(int j1=0;j1<c;j1++){
            for(int j2=0;j2<c;j2++){
                int maxi=-1e8;
                   for(int dj1=-1;dj1<=1;dj1++){
        for(int dj2=-1;dj2<=1;dj2++){
            int value=0;
            if(j1==j2) value=grid[i][j1];
            else{
                 value=grid[i][j1]+grid[i][j2];
            }
            if(j1+dj1<0 || j1+dj1>=c || j2+dj2<0 || j2+dj2>=c){
                value+=-1e8;
            }
            else{
                value+=dp[i+1][j1+dj1][j2+dj2];
            }
            maxi=max(maxi,value);
        }
                   }
                dp[i][j1][j2]=maxi;
            }
        }
        
    }
    return dp[0][0][c-1];
}

//space optimisation

#include <bits/stdc++.h> 

int maximumChocolates(int r, int c, vector<vector<int>> &grid) {
    // Write your code here.
     
    vector<vector<int>>front(c,vector<int>(c,0));
     vector<vector<int>>curr(c,vector<int>(c,0));
    for(int i=0;i<c;i++){
        for(int j=0;j<c;j++){
            if(i==j)front[i][j]=grid[r-1][i];
            else{
                front[i][j]=grid[r-1][i]+grid[r-1][j];
            }
        }
    }
    
    for(int i=r-2;i>=0;i--){
        for(int j1=0;j1<c;j1++){
            for(int j2=0;j2<c;j2++){
                int maxi=-1e8;
                   for(int dj1=-1;dj1<=1;dj1++){
        for(int dj2=-1;dj2<=1;dj2++){
            int value=0;
            if(j1==j2) value=grid[i][j1];
            else{
                 value=grid[i][j1]+grid[i][j2];
            }
            if(j1+dj1<0 || j1+dj1>=c || j2+dj2<0 || j2+dj2>=c){
                value+=-1e8;
            }
            else{
                value+=front[j1+dj1][j2+dj2];
            }
            maxi=max(maxi,value);
        }
                   }
                curr[j1][j2]=maxi;
            }
           
        }
         front=curr;
    }
    return front[0][c-1];
}
