https://www.codingninjas.com/codestudio/problems/frog-jump_3621012?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0
*************************************
//memoization

#include <bits/stdc++.h> 
int minEnergy(int n,vector<int>&heights,vector<int>&dp){
    if(n==0)return 0;
    if(n==1)return abs(heights[1]-heights[0]);
    if(dp[n]!=-1)return dp[n];
    int first=minEnergy(n-1,heights,dp)+abs(heights[n]-heights[n-1]);
    int second=minEnergy(n-2,heights,dp)+abs(heights[n]-heights[n-2]);
    return dp[n]=min(first,second);
}
int frogJump(int n, vector<int> &heights)
{
    // Write your code here.
    vector<int>dp(n+1,-1);
    return minEnergy(n-1,heights,dp);
}

***************************************
// tabulation

#include <bits/stdc++.h> 
int frogJump(int n, vector<int> &heights)
{
    // Write your code here.
    vector<int>dp(n+1,-1);
    dp[0]=0;
    dp[1]=abs(heights[1]-heights[0]);
    for(int i=2;i<n;i++){
        dp[i]=min(abs(heights[i]-heights[i-1])+dp[i-1],abs(heights[i]-heights[i-2])+dp[i-2]);
    }
    return dp[n-1];
}

************************************
//space optimisation

#include <bits/stdc++.h> 
int frogJump(int n, vector<int> &heights)
{
    // Write your code here.
   int prev2=0;
   int prev=abs(heights[1]-heights[0]);
    for(int i=2;i<n;i++){
        int curr=min(abs(heights[i]-heights[i-1])+prev,abs(heights[i]-heights[i-2])+prev2);
        prev2=prev;
        prev=curr;
    }
    return prev;
}

