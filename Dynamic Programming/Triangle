https://www.codingninjas.com/codestudio/problems/triangle_1229398?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0

*********************************
//memo

#include <bits/stdc++.h> 
int func(vector<vector<int>>&triangle,int rowI,int i,int j,vector<vector<int>>&dp){
    if(i==rowI)return triangle[i][j];
    if(dp[i][j]!=-1)return dp[i][j];
    int down=triangle[i][j]+func(triangle,rowI,i+1,j,dp);
    int diag=triangle[i][j]+func(triangle,rowI,i+1,j+1,dp);
    return dp[i][j]=min(down,diag);
}

int minimumPathSum(vector<vector<int>>& triangle, int n){
	// Write your code here.
    int m=triangle[n-1].size();
    int i=0;
    int j=0;
    vector<vector<int>>dp(n,vector<int>(m,-1));
    return func(triangle,n-1,i,j,dp);
}

****************************
//tab

#include <bits/stdc++.h> 

int minimumPathSum(vector<vector<int>>& triangle, int n){
	// Write your code here.
  
    vector<vector<int>>dp(n,vector<int>(n,-1));
    for(int i=0;i<n;i++){
        dp[n-1][i]=triangle[n-1][i];
    }
    for(int i=n-2;i>=0;i--){
        for(int j=i;j>=0;j--){                                        //can go from 0 to i also!
            int down=triangle[i][j]+dp[i+1][j];
            int dg=triangle[i][j]+dp[i+1][j+1];
            dp[i][j]=min(down,dg);
        }
    }
    return dp[0][0];
    
}

*****************************
//space optimisation

#include <bits/stdc++.h> 
int minimumPathSum(vector<vector<int>>& triangle, int n){
	// Write your code here.
    vector<int>prev(n,0);
    for(int i=0;i<n;i++){
        prev[i]=triangle[n-1][i];
    }
    for(int i=n-2;i>=0;i--){
        vector<int>curr(n,0);
        for(int j=i;j>=0;j--){                                       //can go from 0 to i also!
            int down=triangle[i][j]+prev[j];
            int dg=triangle[i][j]+prev[j+1];
            curr[j]=min(down,dg);
        }
        prev=curr;
    }
    return prev[0];
}
