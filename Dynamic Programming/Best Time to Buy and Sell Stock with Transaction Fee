https://www.codingninjas.com/codestudio/problems/rahul-and-his-chocolates_3118974?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0

**********************************
//memo

#include <bits/stdc++.h> 
int func(vector<int>&prices,int n,int ind,int buy,vector<vector<int>>&dp,int fee){
    if(ind==n)return 0;
    int profit=0;
    if(dp[ind][buy]!=-1)return dp[ind][buy];
    if(buy==0){
        profit=max(-prices[ind]+func(prices,n,ind+1,1,dp,fee),func(prices,n,ind+1,0,dp,fee));
    }
    else{
        profit=max(prices[ind]-fee+func(prices,n,ind+1,0,dp,fee),func(prices,n,ind+1,1,dp,fee));
    }
    return dp[ind][buy]=profit;
}

int maximumProfit(int n, int fee, vector<int> &prices) {
    // Write your code here.
    vector<vector<int>>dp(n,vector<int>(2,-1));
    return func(prices,n,0,0,dp,fee);
}


**************************
//tab

#include <bits/stdc++.h> 


int maximumProfit(int n, int fee, vector<int> &prices) {
    // Write your code here.
    vector<vector<int>>dp(n+1,vector<int>(2,0));
    for(int ind=n-1;ind>=0;ind--){
        for(int buy=0;buy<=1;buy++){                                            //you can also omit this inner loop as it iterates for only 2 times and also each time changing the value of just the one so you can simply write dp[ind][0] and dp[ind][1] respectively! 
            if(buy==0){
                dp[ind][buy]=max(-prices[ind]+dp[ind+1][1],dp[ind+1][0]);
            }
            else{
                dp[ind][buy]=max(prices[ind]-fee+dp[ind+1][0],dp[ind+1][1]);
            }
    
        }
    }
    return dp[0][0];
}


*****************************
//space optimisation

#include <bits/stdc++.h> 


int maximumProfit(int n, int fee, vector<int> &prices) {
    // Write your code here.
    vector<int>front(2,0),curr(2,0);
    for(int ind=n-1;ind>=0;ind--){
        for(int buy=0;buy<=1;buy++){
            if(buy==0){
                curr[buy]=max(-prices[ind]+front[1],front[0]);
            }
            else{
                curr[buy]=max(prices[ind]-fee+front[0],front[1]);
            }
    
        }
        front=curr;
    }
    return front[0];
}
