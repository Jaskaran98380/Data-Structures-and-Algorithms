https://www.codingninjas.com/codestudio/problems/total-unique-paths_1081470?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0

***********************
//memo

#include <bits/stdc++.h> 
int memo(int i,int j,vector<vector<int>>&dp){
    if(i==0 && j==0)return 1;
    if(i<0 || j<0)return 0;
    if(dp[i][j]!=-1)return dp[i][j];
    int up=memo(i-1,j,dp);
    int left=memo(i,j-1,dp);
    return dp[i][j] = up + left;
}

int uniquePaths(int m, int n) {
	// Write your code here.
    vector<vector<int>>dp(m,vector<int>(n,-1));
    return memo(m-1,n-1,dp);
}

**********************************
//tab

#include <bits/stdc++.h> 


int uniquePaths(int m, int n) {
	// Write your code here.
    vector<vector<int>>dp(m,vector<int>(n,0));
    for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            if(i==0 || j==0)dp[i][j]=1;
            else{
                int up=0;
                int left=0;
                up=dp[i-1][j];
                left=dp[i][j-1];
                dp[i][j]=up+left;
            }
        }
    }
    return dp[m-1][n-1];
}

*********************************
//space optimisation

#include <bits/stdc++.h> 


int uniquePaths(int m, int n) {
	// Write your code here.
    vector<int>prev(n,0);
    for(int i=0;i<m;i++){
        vector<int>curr(n,0);
        for(int j=0;j<n;j++){
            if(i==0 && j==0)curr[j]=1;
            else{
                int up=0;
                int left=0;
                up=prev[j];
                if(j>0)left=curr[j-1];
                curr[j]=up+left;
            }
        }
        prev=curr;
    }
    return prev[n-1];
}
