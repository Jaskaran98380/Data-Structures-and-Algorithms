https://www.codingninjas.com/codestudio/problems/longest-palindromic-subsequence_842787?leftPanelTab=0

******************************

here you can reverse the given string and can find the lcs to determine the answer because palindrome is actually comparing the string from front and back!

Below is the memoisation code and you can refer the tabyulation and space opt code fromt the lcs solution!

************************

#include <bits/stdc++.h> 
int func(int s1,int s2, string s, string t,vector<vector<int>>&dp){
    if(s1<0 || s2<0)return 0;
    if(dp[s1][s2]!=-1){
        return dp[s1][s2];
    }
    if(s[s1]==t[s2]){
        return dp[s1][s2] = 1+func(s1-1,s2-1,s,t,dp);
    }
    return dp[s1][s2] = max(func(s1-1,s2,s,t,dp),func(s1,s2-1,s,t,dp));
}

int longestPalindromeSubsequence(string s)
{
    // Write your code here.
    string t=s;
    reverse(t.begin(),t.end());
     int s1=s.length();
     int s2=t.length();
     vector<vector<int>>dp(s1,vector<int>(s2,-1));
     return func(s1-1,s2-1,s,t,dp);
}
