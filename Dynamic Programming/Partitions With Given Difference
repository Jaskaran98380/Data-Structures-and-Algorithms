https://www.codingninjas.com/codestudio/problems/partitions-with-given-difference_3751628?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0

************************
//memo

#include <bits/stdc++.h> 
int mod=1e9+7;
int func(int ind,vector<int>&num,int tar,vector<vector<int>>&dp){
         if(ind==0){
           if(num[0]==0 && tar==0)return 2;
           if(tar==num[0] || tar==0)return 1;
             return 0;
         }
       if(dp[ind][tar]!=-1)return dp[ind][tar];    
    int notTake=func(ind-1,num,tar,dp);
    int take=0;
    if(num[ind]<=tar) take=func(ind-1,num,tar-num[ind],dp);
    return dp[ind][tar]= (notTake+take)%mod;
      
}

int countPartitions(int n, int d, vector<int> &arr) {
    // Write your code here.
    int totalSum=0;
    for(int i=0;i<n;i++){
        totalSum+=arr[i];
    }
    int target=(totalSum-d)/2;     //s1-s2=d...s1=totalSum-s2...totalSum-2s2=d...s2=(totalsum-d)/2
    if(totalSum-d<0 || (totalSum-d)%2)return 0;
    vector<vector<int>>dp(n,vector<int>(target+1,-1));
    return func(n-1,arr,target,dp);
}


********************
//tab

#include <bits/stdc++.h> 

int countPartitions(int n, int d, vector<int> &arr) {
    // Write your code here.
    int mod=1e9+7;
    int totalSum=0;
    for(int i=0;i<n;i++){
        totalSum+=arr[i];
    }
    int target=(totalSum+d)/2;     //s1-s2=d...s1=totalSum-s2...totalSum-2s2=d...s2=(totalsum-d)/2
    if(totalSum+d<0 || (totalSum+d)%2)return 0;
    vector<vector<int>>dp(n,vector<int>(target+1,0));
        for(int i=0;i<=target;i++){
         if(i==0 && arr[0]==0){
             dp[0][i]=2;
         }
         else if(i==0 || i==arr[0]){
             dp[0][i]=1;
         }
    }
    for(int i=1;i<n;i++){
        for(int j=0;j<=target;j++){
             int notTake=dp[i-1][j];
             int take=0;
             if(arr[i]<=j) take=dp[i-1][j-arr[i]];
             dp[i][j]= (notTake+take)%mod;     
        }
    }
    return dp[n-1][target];
}


//space optimisation

#include <bits/stdc++.h> 

int countPartitions(int n, int d, vector<int> &arr) {
    // Write your code here.
    int mod=1e9+7;
    int totalSum=0;
    for(int i=0;i<n;i++){
        totalSum+=arr[i];
    }
    int target=(totalSum+d)/2;     //s1-s2=d...s1=totalSum-s2...totalSum-2s2=d...s2=(totalsum-d)/2
    if(totalSum+d<0 || (totalSum+d)%2)return 0;
   vector<int>prev(target+1,0);
    vector<int>curr(target+1,0);
    for(int i=0;i<=target;i++){
         if(i==0 && arr[0]==0){
             prev[i]=2;
         }
         else if(i==0 || i==arr[0]){
             prev[i]=1;
         }     
    }
    for(int i=1;i<n;i++){
        for(int j=0;j<=target;j++){
             int notTake=prev[j];
             int take=0;
             if(arr[i]<=j) take=prev[j-arr[i]];
             curr[j]= (notTake+take)%mod;
        }
        prev=curr;
    }
    return prev[target];
}


